# Generated by Django 3.0.7 on 2021-01-17 07:32

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=20, verbose_name='科目')),
                ('grade', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=20, verbose_name='科目')),
                ('title', models.TextField(verbose_name='题目描述')),
                ('optionA', models.TextField(max_length=30, verbose_name='A选项')),
                ('optionB', models.TextField(max_length=30, verbose_name='B选项')),
                ('optionC', models.TextField(max_length=30, verbose_name='C选项')),
                ('optionD', models.TextField(max_length=30, verbose_name='D选项')),
                ('answer', models.CharField(choices=[('optionA', 'A'), ('optionB', 'B'), ('optionC', 'C'), ('optionD', 'D')], max_length=10, verbose_name='答案')),
                ('level', models.CharField(choices=[('level3', 'difficult'), ('level2', 'general'), ('level1', 'easy')], max_length=10, verbose_name='等级')),
                ('score', models.IntegerField(default=1, verbose_name='分数')),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=20)),
                ('major', models.CharField(max_length=20, verbose_name='适用专业')),
                ('exam_start_time', models.DateTimeField()),
                ('exam_stop_time', models.DateTimeField()),
                ('problem', models.ManyToManyField(to='examapp.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='学号')),
                ('real_name', models.CharField(max_length=30, verbose_name='姓名')),
                ('sex', models.CharField(choices=[('male', '男'), ('female', '女')], default='男', max_length=10, verbose_name='性别')),
                ('academy', models.CharField(choices=[('cs', '计算机科学与技术学院'), ('art', '艺术学院')], default=None, max_length=20, null=True, verbose_name='学院')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='是否为老师')),
                ('class_name', models.CharField(blank=True, default='未知', max_length=50, verbose_name='班级')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '用户',
                'ordering': ['class_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
